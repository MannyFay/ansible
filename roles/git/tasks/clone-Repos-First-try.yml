---
- name: Check if repos exist, if not clone them
  vars:
    check_task_name: "---> Checking, if repository {{ item.name }} exist already on disk..."
    clone_task_name: "---> Cloning {{ item.name }} repository to disk..."
    fetch_task_name: "---> Fetching content of {{ item.name }} repository..."
    update_remote_task_name: "---> Updating Git remote URL of {{ item.name }} repository to use SSH..."
  loop: "{{ repositories }}"
  loop_control:
    loop_var: item
  block:

    - when: os_type in ["arch", "macos", "ubuntu"]
      name: "---> Checking, if repository {{ item.name }} exist already on disk..."
      stat:
        path: "{{ item.directory }}"
      register: repository

    # - when: os_type == 'Windows'



    - when: repository.stat.exists == False and os_type in ["arch", "macos", "ubuntu"]
      name: "{{ clone_task_name }}"
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: "{{ item.url }}"
        dest: "{{ item.directory }}"

    # - when: os_type == 'Windows'



    - when: repository.stat.exists == False and os_type in ["arch", "macos", "ubuntu"]
      name: "{{ fetch_task_name }}"
      shell: cd "{{ item.directory }}" && git fetch origin

    # - when: os_type == 'Windows'



    - when: repository.stat.exists == False and os_type in ["arch", "macos", "ubuntu"]
      name: "{{ update_remote_task_name }}"
      ansible.builtin.lineinfile:
        path: "{{ item.git_config_path }}"
        regexp: "{{ item.line_to_replace }}"
        line: "{{ item.ssh_url }}"



    # - when: os_type == 'Windows'


